@using TimeForge.ViewModels.TimeEntry;
@model NavbarTimerViewModel

<div class="nav-item dropdown">
    <a class="nav-link dropdown-toggle d-flex align-items-center" href="#"
       id="navbarTimerDropdown" data-bs-toggle="dropdown" aria-expanded="false">
        <span id="timer-display" class="badge bg-light text-dark border rounded-pill px-2">
            @if (Model.IsRunning)
            {
                <span class="fs-4 text-success">@Model.TaskName : <span id="timer-text" class="fs-4 text-danger"> 00:00:00 </span></span>
            }
            else
            {
                <span class="text-muted fs-4">No timer running</span>
            }
        </span>
    </a>
    <ul class="dropdown-menu dropdown-menu-end p-2" aria-labelledby="navbarTimerDropdown">
        @if (Model.IsRunning)
        {
            <li>
                <form method="post" asp-controller="TimeEntry" asp-action="Pause">
                    <input type="hidden" name="EntryId" value="@Model.Id" />
                    <button type="submit" class="btn btn-sm btn-outline-secondary w-100">Pause</button>
                </form>
            </li>
            <li class="mt-1">
                <form method="post" asp-controller="TimeEntry" asp-action="Stop">
                    <input type="hidden" name="EntryId" value="@Model.Id" />
                    <button type="submit" class="btn btn-sm btn-outline-danger w-100">Stop</button>
                </form>
            </li>
        }
        else
        {
            <li class="text-muted px-2">No active timer</li>
        }
    </ul>
</div>

<div id="timer-is-running" class="d-none">@(Model.IsRunning ? "true" : "false")</div>

<div id="timer-duration" class="d-none">@(Model.IsRunning ? Model.DurationInMiliseconds : 0)</div>

