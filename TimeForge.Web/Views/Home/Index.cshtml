@using TimeForge.ViewModels.Project
@using TimeForge.ViewModels.Task
@model PagedProjectViewModel

@{
    ViewData["Title"] = "Home";
    bool isLoggedIn = (bool)this.ViewData["IsLoggedIn"];
    bool hasProjects = this.Model.Projects.Any();
}

<div class="container py-5">
    @if (isLoggedIn)
    {
        @if (!hasProjects)
        {
            <div class="text-center bg-light border rounded p-5 shadow-sm">
                <h4 class="mb-3">No current active projects</h4>
                <p class="text-muted">Start by creating your first project and organize your work.</p>
                <a class="btn btn-primary btn-lg mt-3" asp-controller="Project" asp-action="Create">Create Project</a>
            </div>
        }
        else
        {
            <div class="text-center bg-light border rounded shadow-sm mb-3 p-2">
                @await Component.InvokeAsync("TagFilterWidget", new { tags = Model.SelectedTags })
                <a class="btn btn-primary btn-lg m-2" asp-controller="Project" asp-action="Create">Create Project</a>
            </div>
            @foreach (var project in this.Model.Projects)
            {
                <div class="card shadow-sm border-0 mb-4">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start mb-2">
                            <div>
                                <h4 class="fw-semibold mb-1">@project.Name</h4>
                                <div class="text-muted small">
                                    Created by: @project.CreatedBy |
                                    Due: @(string.IsNullOrEmpty(project.DueDate) ? "N/A" : project.DueDate)
                                    @if (project.AssignedToUserId != null)
                                    {
                                        <span class="badge bg-info">Assigned</span>
                                    }
                                </div>

                                <div class="mt-2">
                                    @foreach (var tag in project.Tags)
                                    {
                                        <span class="badge rounded-pill bg-secondary me-1">@tag.Name</span>
                                    }
                                </div>
                            </div>
                            <a class="btn btn-outline-primary btn-sm" asp-area="" asp-controller="Project" asp-action="Details" asp-route-projectId="@project.Id">Details</a>
                        </div>

                        <hr/>

                        <div id="task-list-container-@project.Id">
                            @await Html.PartialAsync("_ProjectTaskList", new TaskListAndFormModel()
                            {
                                ProjectId = @project.Id,
                                Tasks = @project.Tasks,
                                TaskInputModel = new TaskInputModel()
                                {
                                    ProjectId = @project.Id,
                                }
                            })
                        </div>
                    </div>
                </div>
            }
        }
    }
    else
    {
        <!-- Welcome Banner -->
        <div class="p-5 mb-4 bg-light rounded-3 shadow-sm">
            <div class="container-fluid py-5 text-center">
                <h1 class="display-5 fw-bold">Welcome to TimeForge</h1>
                <p class="col-md-8 mx-auto fs-5 text-muted">
                    Organize your projects, track your tasks, and forge your time with precision.
                </p>
                <div class="mt-4 d-md-block d-flex flex-column gap-1 justify-content-center align-items-center">
                    <a href="/Identity/Account/Login" class="btn btn-primary btn-lg lg-me-2">Sign In</a>
                    <a href="/Identity/Account/Register" class="btn btn-outline-secondary btn-lg">Register</a>
                </div>
            </div>
        </div>
    }
</div>

@if (isLoggedIn)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-end">
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" tabindex=@(Model.CurrentPage == 1 ? -1 : 0) aria-label="Previous"
                   onclick="changePage(@Model.CurrentPage - 1)"
                   >
                    <span aria-hidden="true">&laquo;</span>
                    <span class="sr-only">Previous</span>
                </a>
            </li>
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                    <a 
                        class="page-link" 
                        onclick="changePage(@i)"
                    >
                        @i
                        </a>
                </li>
            }
            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" aria-label="Next" tabindex=@(Model.CurrentPage == Model.TotalPages ? -1 : 0)
                   onclick="changePage(@Model.CurrentPage + 1)"
                   >
                    <span aria-hidden="true">&raquo;</span>
                    <span class="sr-only">Next</span>
                </a>
            </li>
        </ul>
    </nav>
}

@section Scripts
{
    <partial name="_ValidationScriptsPartial"/>
    <partial name="_TaskCompletionScriptsPartial"/>
    <partial name="_TimerWidgetVisualisationScript"/>
    
    <script>
      function changePage(page) {
          
          if ($(document).ready()) {
              let tagForm = $("#tagFilterForm");
              let tagInput = $("#tagFilterForm_page_number_input");
              page = Number(page);

              tagInput.val(page);
              tagForm.submit();
          }
        }
    </script>
}