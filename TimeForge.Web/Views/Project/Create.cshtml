@using TimeForge.ViewModels.Project
@model ProjectInputModel

@{
    ViewData["Title"] = "Create New Project";
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow-sm border-0">
                <div class="card-body p-4">
                    <h3 class="fw-bold mb-4 text-primary">Create New Project</h3>

                    <form asp-action="Create" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3" role="alert"></div>
                        @* Hidden Fields *@
                        <input type="hidden" asp-for="Id" />
                        <input type="hidden" asp-for="UserId" />

                        <!-- Project Name -->
                        <div class="form-floating mb-3">
                            <input asp-for="Name" class="form-control" placeholder="Project name" />
                            <label asp-for="Name">Project Name</label>
                            <span asp-validation-for="Name" class="text-danger small"></span>
                        </div>

                        <!-- Due Date -->
                        <div class="mb-3">
                            <label asp-for="DueDate" class="form-label">Due Date (optional)</label>
                            <input asp-for="DueDate" class="form-control" type="date" />
                            <span asp-validation-for="DueDate" class="text-danger small"></span>
                        </div>

                        <!-- Public Toggle -->
                        <div class="form-check form-switch mb-4">
                            <input asp-for="IsPublic" class="form-check-input" type="checkbox" id="isPublicToggle" />
                            <label class="form-check-label" for="isPublicToggle">Make project public</label>
                        </div>
                        
                        <!-- Tags -->
                        <div class="mb-4">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <label class="form-label fw-semibold text-muted">Tags</label>
                                <button type="button" class="btn btn-outline-secondary btn-sm" data-bs-toggle="modal" data-bs-target="#addTagModal">
                                    + Add Tag
                                </button>
                            </div>

                            @if (Model.Tags.Any())
                            {
                                <div class="d-flex flex-wrap gap-2">
                                    @foreach (var tag in Model.Tags)
                                    {
                                        <div class="form-check form-check-inline">
                                            <input class="form-check-input" type="checkbox" name="SelectedTags" value="@tag.Name" id="tag_@tag.Name" />
                                            <label class="form-check-label" for="tag_@tag.Name">@tag.Name</label>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <p class="text-muted fst-italic">You donâ€™t have any tags yet.</p>
                            }
                        </div>

                        <!-- Submit -->
                        <button type="submit" class="btn btn-primary w-100">Create Project</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Tag Modal -->
<div class="modal fade" id="addTagModal" tabindex="-1" aria-labelledby="addTagModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content shadow-sm">
            <div class="modal-header">
                <h5 class="modal-title fw-bold" id="addTagModalLabel">Add New Tag</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body" id="createTagContainer">
                @await Component.InvokeAsync("CreateTag", new { userId = Model.UserId, projectId = Model.Id })
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
